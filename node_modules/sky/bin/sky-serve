#!/usr/bin/env node

var program = require('commander')
  , fs = require('fs-extra')
  , path = require('path')
  , rock = require('rock')
  , cl = require('cl')
  , buffet = require('buffet')
  , sky = require('../lib/sky')
  , http = require('http')
  , open = require('open')

program.version(require('../package'))
  .option('-p, --port <port>', 'The port to serve your site. Defaults to port 2222.')
  .option('-d, --dir <dir>', 'The directory to serve as the root. Defaults to the "public" directory of the site.')
  .option('-b, --browser', 'Open it up in the browser.')
  .parse(process.argv)


sky.findBaseDir(function(dir) {
  if (!dir && !program.dir) cl.exit(1, "Can not find the sky/config.json or a directory was not explicity specified via command line args. If you're not in a Sky site directory, see --dir.")
  dir = dir || program.dir
  serve(dir)
})

function serve (baseDir) {
  var configs = sky.loadConfigsSync(baseDir)

  var port = program.port || process.env.PORT || configs.get('config:site.port') || 2222
  //var serveDir = program.dir || path.join(baseDir, 'public')
  var outputDir;
  if (configs.get('config:build.outputDir')) 
    outputDir = path.join(baseDir, configs.get('config:build.outputDir'))
  else
    outputDir = path.join(baseDir, 'public')

  var serveDir = program.dir || outputDir

  var server = http.createServer()
    , fileServer = buffet({root: serveDir, defaultContentType: 'text/html', watch: false})
  
  server.on('request', function(req, res) {
    fileServer(req, res, function() {
      fileServer.notFound(req, res)
    })
  })
  
  //server.on('request', fileServer.notFound);
  server.listen(port, function() {
    console.log("Serving up %s on port %s...", serveDir, port)
    if (program.browser)
      open("http://localhost:" + port)
  })
}
